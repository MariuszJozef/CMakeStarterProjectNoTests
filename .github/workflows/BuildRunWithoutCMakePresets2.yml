name: Build and run without CMakePresets.json 2

on:
  push: 
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        cpp_compiler: [g++, clang++]
        build_type: [Debug, Release]
        exclude:
          - os: macos-latest
            cpp_compiler: g++
        include:
          - os: windows-latest
            cpp_compiler: cl
            build_type: Debug
          - os: windows-latest
            cpp_compiler: cl
            build_type: Release
        
    runs-on: ${{ matrix.os }}

    steps:
    - run: echo Platform = ${{ matrix.os }}, compiler = ${{ matrix.cpp_compiler}}, build type = ${{ matrix.build_type }}

    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Location of repo
      run: |
        pwd 
        ls ${{ github.workspace }}
        
    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Setup MSVC compiler
      if: ${{ matrix.os == 'windows-latest' }}
      # uses: microsoft/setup-msbuild@v1.0.2
      uses: ilammy/msvc-dev-cmd@v1

    - name: MSVC compiler version
      if: ${{ matrix.os == 'windows-latest' }}
      shell: bash
      run: |
        echo cl
        cl

    - name: Tool versions
      shell: bash
      run: | 
        echo g++ --version
        g++ --version
        echo 
        echo clang++ --version
        clang++ --version
        echo 
        echo cmake --version
        cmake --version
        echo 
        echo ninja --version
        ninja --version

    - name: CMake configure ${{ runner.os }} ${{matrix.build_type}} ${{matrix.cpp_compiler}}
      run: cmake -S . -B buildNinja -G Ninja -D CMAKE_BUILD_TYPE=${{matrix.build_type}} --fresh
      
    - name: CMake build ${{ runner.os }}
      run: cmake --build buildNinja -j8

    - name: CMake run ${{ runner.os }}
      run: cmake --build buildNinja -j8 --target run
